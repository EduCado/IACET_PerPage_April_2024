<Activity mc:Ignorable="sap sap2010" x:Class="ReadPDF_FlowChart" VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="ReadPDF_FlowChart_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upap="clr-namespace:UiPath.PDF.Activities.PDF;assembly=UiPath.PDF.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.PDF.Activities.PDF</x:String>
      <x:String>UiPath.PDF.Activities</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="ReadPDF_FlowChart" sap:VirtualizedContainerService.HintSize="662,944" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:Int32" Name="IntTotalPageCount" />
      <Variable x:TypeArguments="x:String" Default="DOC-20240117-WA0017_240307_142344.pdf" Name="strPdfFileName" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\GreatBots\Documents\UiPath\Iacet_Dispatcher\Data\Temp" Name="strPdfFileLocation" />
      <Variable x:TypeArguments="x:String" Name="strSplitPdfFolder" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,146</av:PointCollection>
        <x:Double x:Key="Height">907</x:Double>
        <x:Double x:Key="Width">628</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID6</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID6">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">139,146</av:Point>
          <av:Size x:Key="ShapeSize">322,68</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,214 300,244 294.5,244 294.5,294</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <upap:GetPDFPageCount DisplayName="Get PDF Page Count" FileName="[strPdfFileLocation + &quot;\&quot; + strPdfFileName]" sap:VirtualizedContainerService.HintSize="322,68" sap2010:WorkflowViewState.IdRef="GetPDFPageCount_1" PageCount="[IntTotalPageCount]" />
      <FlowStep.Next>
        <FlowDecision x:Name="__ReferenceID0" Condition="[IntTotalPageCount&gt;1]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="79,87" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <av:Point x:Key="ShapeLocation">255,294</av:Point>
              <av:Size x:Key="ShapeSize">79,87</av:Size>
              <av:PointCollection x:Key="TrueConnector">255,337.5 100,337.5 100,364</av:PointCollection>
              <av:PointCollection x:Key="FalseConnector">334,337.5 460,337.5 460,374</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <FlowDecision.True>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">0,364</av:Point>
                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">100,416 100,474</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_2" Message="[&quot;Total Page Count &quot; + IntTotalPageCount.ToString]" />
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">0,474</av:Point>
                      <av:Size x:Key="ShapeSize">200,52</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">100,526 100,576</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[&quot;Start Split PDF Page&quot;]" />
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">0,576</av:Point>
                          <av:Size x:Key="ShapeSize">200,81</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">100,657 100,719.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Folder Check" sap:VirtualizedContainerService.HintSize="512,1343" sap2010:WorkflowViewState.IdRef="Sequence_1">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Boolean" Name="boolIsFolderExists" />
                          <Variable x:TypeArguments="x:String" Name="strSenderName" />
                          <Variable x:TypeArguments="x:String" Name="strEmailTime" />
                          <Variable x:TypeArguments="x:String" Name="variable1" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:FolderExistsX DisplayName="Folder Exists" Exists="[boolIsFolderExists]" sap:VirtualizedContainerService.HintSize="450,173" sap2010:WorkflowViewState.IdRef="FolderExistsX_1" Path="[strPdfFileLocation + &quot;\&quot; + strPdfFileName.Replace(&quot;.pdf&quot;,&quot;&quot;).ToString+&quot;_&quot; + strSenderName+&quot;_&quot;+strEmailTime]" />
                        <Assign sap:VirtualizedContainerService.HintSize="450,122" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strSplitPdfFolder]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strPdfFileLocation + "\" + strPdfFileName.Replace(".pdf","").ToString+"_" + strSenderName+"_"+strEmailTime]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <If Condition="[boolIsFolderExists]" sap:VirtualizedContainerService.HintSize="450,960" sap2010:WorkflowViewState.IdRef="If_1">
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,249" sap2010:WorkflowViewState.IdRef="Sequence_2">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,164" sap2010:WorkflowViewState.IdRef="LogMessage_5" Message="[&quot;Split PDF Folder is available.&quot;]" />
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,550" sap2010:WorkflowViewState.IdRef="Sequence_3">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,181" sap2010:WorkflowViewState.IdRef="LogMessage_6" Message="[&quot;Split PDF Folder is not available. Folder is creating&quot;]" />
                              <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder" sap:VirtualizedContainerService.HintSize="354,120" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[strSplitPdfFolder]" />
                              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,164" sap2010:WorkflowViewState.IdRef="LogMessage_7" Message="[&quot;Folder is created &quot; + strPdfFileLocation + &quot;\&quot; + strPdfFileName.Replace(&quot;.pdf&quot;,&quot;&quot;).ToString+&quot;_&quot; + strSenderName+&quot;_&quot;+strEmailTime]" />
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID5">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">0,719.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,81</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Split PDF" sap:VirtualizedContainerService.HintSize="200,81" sap2010:WorkflowViewState.IdRef="Sequence_4">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Int32" Default="1" Name="IntPageCounter" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="568,1092" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                              <TryCatch.Try>
                                <ui:InterruptibleWhile CurrentIndex="{x:Null}" Condition="[IntTotalPageCount &gt;=IntPageCounter]" DisplayName="While" sap:VirtualizedContainerService.HintSize="530,841" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
                                  <ui:InterruptibleWhile.Body>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,727" sap2010:WorkflowViewState.IdRef="Sequence_5">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,181" sap2010:WorkflowViewState.IdRef="LogMessage_9" Message="[&quot;Spliting Page Number &quot; +IntPageCounter.ToString]" />
                                      <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,181" sap2010:WorkflowViewState.IdRef="LogMessage_10" Message="[strSplitPdfFolder + &quot;\&quot;+ IntPageCounter.ToString+ strPdfFileName]" />
                                      <upap:ExtractPDFPageRange DisplayName="Extract PDF Page Range" FileName="[strPdfFileLocation + &quot;\&quot; + strPdfFileName]" sap:VirtualizedContainerService.HintSize="434,175" sap2010:WorkflowViewState.IdRef="ExtractPDFPageRange_2" OutputFileName="[strSplitPdfFolder + &quot;\&quot;+ IntPageCounter.ToString+ strPdfFileName]" Range="[IntPageCounter.ToString]" />
                                      <Assign sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_1">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Int32">[IntPageCounter]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Int32">[IntPageCounter+1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ui:InterruptibleWhile.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:InterruptibleWhile>
                              </TryCatch.Try>
                              <TryCatch.Catches>
                                <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="534,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ActivityAction x:TypeArguments="s:Exception">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                    </ActivityAction.Argument>
                                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_8" Message="[exception.Message]" />
                                  </ActivityAction>
                                </Catch>
                              </TryCatch.Catches>
                            </TryCatch>
                          </Sequence>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowDecision.True>
          <FlowDecision.False>
            <FlowStep x:Name="__ReferenceID2">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">360,374</av:Point>
                  <av:Size x:Key="ShapeSize">200,52</av:Size>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="LogMessage_3" Message="[&quot;Total Page Count &quot; + IntTotalPageCount.ToString]" />
            </FlowStep>
          </FlowDecision.False>
        </FlowDecision>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
  </Flowchart>
</Activity>